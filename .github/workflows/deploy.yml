name: Deploy to Digital Ocean

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build application
        run: npm run build

      - name: Generate Prisma client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy to Digital Ocean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Deploying latest changes..."
            cd /home/${{ secrets.DROPLET_USER }}/backend-world-wide
            
            # Ensure git is properly configured
            git config --global --add safe.directory /home/${{ secrets.DROPLET_USER }}/backend-world-wide
            
            # Fetch all changes and force reset to latest master
            git fetch --all
            git reset --hard origin/master
            
            # Verify latest commit
            echo "Latest commit:"
            git log -1 --pretty=format:"%h - %an, %ar : %s"
            
            # Create .env file for docker-compose
            echo "Creating environment variables..."
            cat > .env << EOF
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DIGITAL_OCEAN_ACCESS_KEY=${{ secrets.DIGITAL_OCEAN_ACCESS_KEY }}
            DIGITAL_OCEAN_SECRET_KEY=${{ secrets.DIGITAL_OCEAN_SECRET_KEY }}
            DIGITAL_OCEAN_BUCKET=${{ secrets.DIGITAL_OCEAN_BUCKET }}
            DIGITAL_OCEAN_ENDPOINT=${{ secrets.DIGITAL_OCEAN_ENDPOINT }}
            EOF
            
            # Verify JWT_SECRET is set
            if [ -z "$(grep -E '^JWT_SECRET=' .env | cut -d '=' -f2)" ]; then
                echo "ERROR: JWT_SECRET is not set in the environment variables."
                echo "Please add JWT_SECRET to your GitHub repository secrets."
                exit 1
            fi
            
            # Stop existing containers
            echo "Stopping existing containers..."
            docker-compose down 
            
            # Clean up Docker resources but preserve volumes
            echo "Cleaning up Docker resources..."
            docker system prune -af --filter "label!=keep"
            
            # Pull latest images and rebuild
            echo "Building and starting containers..."
            docker-compose build --no-cache
            docker-compose up -d
            
            # Wait for containers to be ready
            echo "Waiting for containers to be ready..."
            sleep 25
            
            # Verify database connection
            echo "Verifying database connection..."
            docker-compose exec -T postgres pg_isready -U postgres || (echo "Database not ready!" && exit 1)
            
            # Run migrations
            echo "Running database migrations..."
            docker-compose exec -T api npx prisma migrate deploy
            
           
            # Verify containers are running
            echo "Deployed containers:"
            docker-compose ps
            
            echo "Deployment completed successfully!"

      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.DROPLET_USER }}/backend-world-wide
            echo "Current git commit:"
            git log -1 --pretty=format:"%h - %an, %ar : %s"
            
            echo "Container status:"
            docker-compose ps